{"version":3,"sources":["app.cljs"],"mappings":";;AASA,AAAKA,gBAAU,gDAAA,hDAACC;AAEhB,yDAAA,zDAACC,yHAEC,WAAAC,SAAcK;AAAd,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAMG;AAAN,AAAA,kDAAA,iEAAA,2CAAA,uDAAA,mDAAA,mDAAA,kCAAA,iOAAA,iEAAA,mFAAA,uFAAA,gEAAA,mFAAA,phBAGkC,+BAAA,2CAAA,8DAAA,xIAACE;;AAIrC,yDAAA,zDAACC,wIAEC,cAAAC,HAAKJ;AAAL,AAAA,IAAAK,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASJ;eAAT,AAAAK,4CAAAD,WAAA,IAAA,tEAAWE;AAAX,AACE,wDAAA,jDAACC,8CAAMR,2DAAU,AAACS,mDAAQF;;AAE9B,yDAAA,zDAACJ,wIAEC,cAAAO,HAAKV;AAAL,AAAA,IAAAW,aAAAD;QAAA,AAAAJ,4CAAAK,WAAA,IAAA,/DAASV;aAAT,AAAAK,4CAAAK,WAAA,IAAA,pEAAWC;AAAX,AACE,wDAAA,jDAACJ,8CAAMR,0EAAkBY;;AAE7B,2DAAA,3DAACC,qKAEC,WAAKb,GAAGC;AAAR,AACE,OAAA,sFAAQD;;AAGZ,iBAAA,jBAAMc;AAAN,AACG,uBAAA,mFAAA,1GAACC;;AACF,IAAME,QAAM,sDAAA,mFAAA,zIAACC;AAAb,AAAA,0FAAA,uDAAA,mFAAA,sDAAA,mFAAA,kDAAA,2CAAA,+HAAA,mFAAA,iDAAA,YAAA,mFAAA,iDAAA,AAAAF,uCAAA,mFAAA,kDAAA,2CAAA,+HAAA,mFAAA,iDAAA,YAAA,mFAAA,iDAAA,r8BAGgB,2WAAgCC,+PAChC;;AAElB,UAAA,VAAME;AAAN,AAAA,0FAAA,oEAAA,2CAAA,+HAAA,mFAAA,mEAAA,2CAAA,8HAAA,mFAAA,kDAAA,2CAAA,+HAAA,gBAAA,rsBACwB,gUAGC,8SACR,0KACZL;;AAEL,GAAA,QAAAM,gCAAAC;AAAA;AAAA,AAAA,AAASC,WAAK,AAACC,gDAAW,wBAAA,xBAACC;;AAE3B,WAAA,XAAMC;AAAN,AACE,OAASH,gBAAK,sDAAA,tDAACI,yIAAcP;;AAE/B,gBAAA,hBAAuBQ;AAAvB,AAEE,OAACF","names":["app/app-state","reagent.core.atom","re_frame.core.reg_event_fx","p__30386","map__30387","cljs.core/--destructure-map","cljs.core.get","db","_","ajax.core/json-response-format","re_frame.core.reg_event_db","p__30388","vec__30389","cljs.core.nth","response","cljs.core.assoc","cljs.core.js__GT_clj","p__30392","vec__30393","result","re_frame.core.reg_sub","app/tasks-grid","re-frame.core/dispatch","cljs.core/deref","tasks","re_frame.core.subscribe","app/app","js/app","js/app.root","app/root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","app/init","reagent.core.as_element","app/re-render"],"sourcesContent":["(ns app (:require\n                  [\"react-dom/client\" :refer [createRoot]]\n                  [reagent.core :as r]\n                  [reagent.dom :as rd]\n                  [re-frame.core :as rf]\n                  [stylo.core :refer [c]]\n                  [day8.re-frame.http-fx]\n                  [ajax.core :as ajax] ))\n\n(def app-state (r/atom {}))\n\n(rf/reg-event-fx\n  :get-tasks\n  (fn [{db :db} _]\n    {:http-xhrio {:method           :get\n                 :uri               \"http://localhost:8080/tasks/get\"\n                 :response-format   (ajax/json-response-format {:keywords? true})\n                 :on-success        [:success-get-tasks]\n                 :on-failure        [:failure-get-tasks]}}))\n\n(rf/reg-event-db\n  :success-get-tasks\n  (fn [db [_ response]]\n    (assoc db :tasks (js->clj response))))\n\n(rf/reg-event-db\n  :failure-get-tasks\n  (fn [db [_ result]]\n    (assoc db :error-message result)))\n\n(rf/reg-sub\n  :tasks\n  (fn [db _]\n    (:tasks db)))\n\n\n(defn tasks-grid []\n   (rf/dispatch [:get-tasks])\n  (let [tasks (rf/subscribe [:tasks])]\n  [:table\n    [:tbody\n     [:tr {:class (c :table-row)} [:td \"1\"] [:td @tasks]]\n     [:tr {:class (c :table-row)} [:td \"2\"] [:td \"task-2\"]]]]))\n\n(defn app []\n  [:div.wrapper {:class (c :w-full\n                           [:pl 10]\n                           [:pt 10])}\n   [:div.content {:class (c :w-auto)}\n    [:h1 {:class (c :text-lg)} \"Tasks\"]\n    [tasks-grid]]])\n\n(defonce root (createRoot (js/document.getElementById \"tasks-app\")))\n\n(defn init []\n  (.render root (r/as-element [app])))\n\n(defn ^:dev/after-load re-render\n  []\n  (init))\n"]}
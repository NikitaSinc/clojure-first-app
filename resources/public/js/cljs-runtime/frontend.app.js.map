{"version":3,"sources":["frontend/app.cljs"],"mappings":";;AASA,AAAKA,yBAAU,gDAAA,hDAACC;AAEhB,yDAAA,zDAACC,yHAEC,WAAKC,UAAUC;AAAf,AAAA,kDAAA,iEAAA,2CAAA,uDAAA,mDAAA,mDAAA,kCAAA,iOAAA,iEAAA,mFAAA,2FAAA,gEAAA,mFAAA,xhBAGgC,+BAAA,2CAAA,8DAAA,xIAACC;;AAInC,yDAAA,zDAACC,4IAEC,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;aAAT,AAAAF,4CAAAD,WAAA,IAAA,pEAAWI;AAAX,AACE,4EAAA,rEAACC,8CAAMb,uGAA8BY;;AAEzC,yDAAA,zDAACN,2IAEC,cAAAQ,HAAKJ;AAAL,AAAA,IAAAK,aAAAD;QAAA,AAAAL,4CAAAM,WAAA,IAAA,/DAASJ;aAAT,AAAAF,4CAAAM,WAAA,IAAA,pEAAWH;AAAX,AACE,4EAAA,rEAACC,8CAAMb,yGAA+BY;;AAE1C,0BAAA,1BAAMI;AAAN,AACG,YAAA,RAAMC;AAAN,AAAa,8BAAA,mFAAA,1GAACC;;AAAd,AAAA,0FAAA,uDAAA,mFAAA,sDAAA,mFAAA,kDAAA,2CAAA,iJAAA,mFAAA,iDAAA,YAAA,mFAAA,iDAAA,yBAAA,mFAAA,kDAAA,2CAAA,iJAAA,mFAAA,iDAAA,YAAA,mFAAA,iDAAA,39BAGe,8mBACA;;AAElB,8BAAA,9BAAMC;AAAN,AACE,IAAMC,QAAM,gDAAA,2CAAA,uDAAA,QAAA,sDAAA,hNAACnB;AAAb,AAAA,0FAAA,qKAAA,2CAAA,6DAAA,pNACS,AAAA,oFAAA,AAAAoB,gBAASD;AADlB,AACqC,gEAAA,2CAAA,uDAAA,MAAA,sDAAA,vNAACE,mDAAMF;;;AAE9C,mBAAA,nBAAMG;AAAN,AAAA,0FAAA,oEAAA,2CAAA,+IAAA,mFAAA,mEAAA,2CAAA,iJAAA,mFAAA,kDAAA,2CAAA,kJAAA,3uBACwB,gVAGC,iUACR,0GACbP;;AAEJ,GAAA,QAAAQ,qCAAAC,yCAAAC;AAAA;AAAA,AAAA,AAASC,oBAAK,AAACC,gDAAW,wBAAA,xBAACC;;AAE3B,oBAAA,pBAAMC;AAAN,AACE,OAASH,yBAAK,sDAAA,tDAACI,yIAAcR;;AAE/B,yBAAA,zBAAuBS;AAAvB,AAEE,OAACF","names":["frontend.app/app-state","reagent.core.atom","re_frame.core.reg_event_fx","coeffects","event","ajax.core/json-response-format","re_frame.core.reg_event_db","p__30144","vec__30145","cljs.core.nth","db","_","result","cljs.core.assoc","p__30148","vec__30149","frontend.app/tasks-grid","tasks","re-frame.core/dispatch","frontend.app/strange-button","state","cljs.core/deref","cljs.core.swap_BANG_","frontend.app/app","js/frontend","js/frontend.app","js/frontend.app.root","frontend.app/root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","frontend.app/init","reagent.core.as_element","frontend.app/re-render"],"sourcesContent":["(ns frontend.app (:require\n                  [\"react-dom/client\" :refer [createRoot]]\n                  [reagent.core :as r]\n                  [reagent.dom :as rd]\n                  [re-frame.core :as rf]\n                  [stylo.core :refer [c]]\n                  [day8.re-frame.http-fx]\n                  [ajax.core :as ajax] ))\n\n(def app-state (r/atom {}))\n\n(rf/reg-event-fx\n  :get-tasks\n  (fn [coeffects event]\n    {:http-xhrio {:method        :get\n                 :uri           \"http://localhost:8080/tasks/get\"\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:success-http-result]\n                  :on-failure [:failure-http-result]}}))\n\n(rf/reg-event-db\n  :success-http-result\n  (fn [db [_ result]]\n    (assoc app-state :succes-http-result result)))\n\n(rf/reg-event-db\n  :failure-http-result\n  (fn [db [_ result]]\n    (assoc app-state :failure-http-result result)))\n\n(defn tasks-grid []\n   (let [tasks #(rf/dispatch [:get-tasks])]\n  [:table\n    [:tbody\n     [:tr {:class (c :table-row)} [:td \"1\"] [:td \"task-1\"]]\n     [:tr {:class (c :table-row)} [:td \"2\"] [:td \"task-2\"]]]]))\n\n(defn strange-button []\n  (let [state (r/atom {:color \"green\" :title \"i am green\"})]\n  [:button (:title @state) {:on-click #(swap! state {:color \"red\" :title \"now i am red\"})}]))\n\n(defn app []\n  [:div.wrapper {:class (c :w-full\n                           [:pl 10]\n                           [:pt 10])}\n   [:div.content {:class (c :w-auto)}\n    [:h1 {:class (c :text-lg)} \"Tasks\"]\n    tasks-grid]])\n\n(defonce root (createRoot (js/document.getElementById \"tasks-app\")))\n\n(defn init []\n  (.render root (r/as-element [app])))\n\n(defn ^:dev/after-load re-render\n  []\n  (init))\n"]}